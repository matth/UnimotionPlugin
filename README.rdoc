= Unimotion Dashboard Widget Plugin

This is a dashboard widget plugin wrapper for the excellent Unimotion C library by Lincoln Ramsay, http://unimotion.sourceforge.net 

Unimotion allows you to read data from the Sudden Motion Sensor found it Apple Mac laptops. This plugin allows widget developers to read SMS data via javascript and build applications that have an awareness of an Apple laptops orientaton and movement.

== Example: Seismometer 

The example application is an imitation seismometer, it plots movement on the X, Y and Z axis using data from the Unimotion plugin. This is demonstrates a simple use of the plugin, it could also be used to control games, sounds, etc.

== Building from source

To build from source you will need Xcode installed. You can open the below project and build from there:

	plugin/UnimotionPlugin/UnimotionPlugin.xcodeproj

If you have rake installed then a Rakefile has been setup to aid compilation. 

	rake build_plugin # Builds the UnimotionPlugin.bundle
	rake build_wdgt  # Builds the example Seismometer widget

== Using the widget plugin

Follow these instructions to use the widget plugin within your own dashboard widgets.

Firstly copy the directory UnimotionPlugin.bundle into your widget's root directory. 

Once in place you must reference this in your widget's Info.plist file so it gets loaded in correctly. 

Add the following keys to your Info.plist:

	<key>Plugin</key>
	<string>UnimotionPlugin.bundle</string> 
	
The plugin should now be loaded into your widget, the following statement should return true.

	if (typeof UnimotionPlugin != 'undefined') 
	
You can now use the plugin's API from your javascript code

=== The API


==== UnimotionPlugin.detectSms()

This will return an integer representing the sudden motion sensor hardware found.

	Return values :
	
	0 = No hardware found
	1 = Powerbook
	2 = iBook
	3 = High Res. Powerbook
	4 = Macbook / Macbook Pro


==== UnimotionPlugin.refreshData();

This will refresh the readings from the sudden motion sensor

==== UnimotionPlugin.readX()

Returns a floating point number representing the last reading from the X axis 

==== UnimotionPlugin.readY()

Returns a floating point number representing the last reading from the Y axis

==== UnimotionPlugin.readZ()

Returns a floating point number representing the last reading from the Z axis

== Developing your widget in a browser

It's often preferable to develop your widget in the browser, in this situation the plugin shall not be available. The below code set's up a 'mock' representation of the plugin so you can continue development in the browser.

	// For browser testing, where UnimotionPlugin doesn't exist
	if (typeof widget == 'undefined') {

		var UnimotionPlugin = function() {
		
			function randomNum() {
				var num = Math.random();
				if (Math.random() > 0.5) {
					num = num * -1;
				}
				return num;
			}

			return {
				'refreshData' : function() {},
				'readX' : randomNum,
				'readY' : randomNum,
				'readZ' : randomNum,
				'detectSms' : function() {
					return 4; // or whatever hardware you want to represent
				}
			}

		}();
	
	}


== License:

=== The Unimotion Dashboard widget plugin and all examples are licensed under GPLv3

(GPLv3)

Copyright (C) 2009 Matt Haynes

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>

=== Unimotion C libraries are licensed under LGPL 2.1

Please see plugin/UnimotionPlugin/unimotion/LGPL.txt 